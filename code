import sys

#Analyzes the text
class analysedText(object):
    
    def __init__ (self, text):
        self.fmtText = text
        
        #Remove lowercase
        self.fmtText = self.fmtText.lower()
        
        #Remove punctuation
        punctuation = ['.','!',',','?']
        for i,x in enumerate(punctuation):
            self.fmtText = self.fmtText.replace(x,'')
        print(self.fmtText)
    
    #returns a dictionary of all unique words in the text along with the number of their occurences
    def freqAll(self):        
        list_text = self.text.split(' ')
        dict_text = {}
        for i,x in enumerate(list_text):
            dict_text.update({x : list_text.count(x)}) 
        return dict_text
    
    #returns the frequency of the word passed in argument
    def freqOf(self,word):
        return( self.freqAll().get(word) )

#Checks for errors in class analyzedText
sampleMap = {'eirmod': 1,'sed': 1, 'amet': 2, 'diam': 5, 'consetetur': 1, 'labore': 1, 'tempor': 1, 'dolor': 1, 'magna': 2, 'et': 3, 'nonumy': 1, 'ipsum': 1, 'lorem': 2}

def testMsg(passed):
    if passed:
       return 'Test Passed'
    else :
       return 'Test Failed'

print("Constructor: ")
try:
    samplePassage = analysedText("Lorem ipsum dolor! diam amet, consetetur Lorem magna. sed diam nonumy eirmod tempor. diam et labore? et diam magna. et diam amet.")
    print(testMsg(samplePassage.fmtText == "lorem ipsum dolor diam amet consetetur lorem magna sed diam nonumy eirmod tempor diam et labore et diam magna et diam amet"))
except:
    print("Error detected. Recheck your function " )
print("freqAll: ")
try:
    wordMap = samplePassage.freqAll()
    print(testMsg(wordMap==sampleMap))
except:
    print("Error detected. Recheck your function " )
print("freqOf: ")
try:
    passed = True
    for word in sampleMap:
        if samplePassage.freqOf(word) != sampleMap[word]:
            passed = False
            break
    print(testMsg(passed))
    
except:
    print("Error detected. Recheck your function  " )

    
